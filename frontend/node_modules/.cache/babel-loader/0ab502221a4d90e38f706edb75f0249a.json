{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sergi\\\\Documents\\\\main\\\\src\\\\components\\\\dashboard\\\\SalesChart.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:3002/api/graficas/\";\n\nasync function getGraficas() {\n  try {\n    const response = await axios({\n      url: `${baseUrl}`,\n      method: \"GET\"\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst SalesChart = () => {\n  _s();\n\n  const [graficas, setGraficas] = useState([]);\n  useEffect(() => {\n    async function loadGraficas() {\n      const response = await getGraficas();\n      setGraficas(response.data.data);\n      return response;\n    }\n\n    loadGraficas();\n  }, []);\n  console.log(graficas);\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      stacked: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 4,\n      colors: [\"transparent\"]\n    },\n    legend: {\n      show: true\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"30%\",\n        borderRadius: 2\n      }\n    },\n    colors: [\"#0d6efd\", \"#009efb\", \"#6771dc\"],\n    xaxis: {\n      categories: [\"Ene\", \"Feb\", \"Mar\", \"Abril\", \"May\", \"Jun\", \"Jul\", \"Agos\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"]\n    },\n    responsive: [{\n      breakpoint: 1024,\n      options: {\n        plotOptions: {\n          bar: {\n            columnWidth: \"60%\",\n            borderRadius: 7\n          }\n        }\n      }\n    }]\n  };\n  const series = [{\n    name: \"2021\",\n    data: [20, 40, 50, 30, 40, 50, 30, 30, 40, 40, 40, 60]\n  }, {\n    name: \"2022\",\n    data: [10, 20, 40, 60, 20, 40, 60, 60, 20, 20, 20, 20]\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h5\",\n        children: \"Grafica de rendimiento de a\\xF1os\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        className: \"text-muted\",\n        tag: \"h6\",\n        children: \"Detalles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: graficas.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.ganancias\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 64\n        }, this)),\n        type: \"bar\",\n        height: \"390\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SalesChart, \"s1tOrNwpM0Bnnz1YnfmlEE1c0zE=\");\n\n_c = SalesChart;\nexport default SalesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"sources":["C:/Users/sergi/Documents/main/src/components/dashboard/SalesChart.js"],"names":["Card","CardBody","CardSubtitle","CardTitle","Chart","axios","useEffect","useState","baseUrl","getGraficas","response","url","method","error","console","log","SalesChart","graficas","setGraficas","loadGraficas","data","options","chart","toolbar","show","stacked","dataLabels","enabled","stroke","width","colors","legend","plotOptions","bar","horizontal","columnWidth","borderRadius","xaxis","categories","responsive","breakpoint","series","name","map","item","ganancias"],"mappings":"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","sourcesContent":["import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst baseUrl= \"http://localhost:3002/api/graficas/\"\r\nasync function getGraficas (){\r\n  try {\r\n    const response = await axios({\r\n     url: `${baseUrl}`,\r\n     method: \"GET\"\r\n    })\r\n    return response\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\nconst SalesChart = () => {\r\n  const [graficas, setGraficas]= useState([]);\r\n  \r\n\r\n  useEffect(()=>{\r\n     \r\n  async function loadGraficas(){\r\n    const response= await getGraficas()\r\n   \r\n    setGraficas(response.data.data)\r\n    return response\r\n  }\r\n \r\n\r\n  loadGraficas()\r\n  }, [])\r\n\r\n  console.log(graficas)\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      stacked: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 4,\r\n      colors: [\"transparent\"],\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"30%\",\r\n        borderRadius: 2,\r\n      },\r\n    },\r\n    colors: [\"#0d6efd\", \"#009efb\", \"#6771dc\"],\r\n    xaxis: {\r\n      categories: [\r\n        \"Ene\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Abril\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Agos\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dic\"\r\n      ],\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        options: {\r\n          plotOptions: {\r\n            bar: {\r\n              columnWidth: \"60%\",\r\n              borderRadius: 7,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"2021\",\r\n      data: [20, 40, 50, 30, 40, 50, 30, 30, 40,  40,  40, 60],\r\n    },\r\n    {\r\n      name: \"2022\",\r\n      data: [10, 20, 40, 60, 20, 40, 60, 60, 20, 20, 20, 20],\r\n    },\r\n  ];\r\n\r\n   \r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Grafica de rendimiento de a√±os</CardTitle>\r\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\r\n          Detalles\r\n        </CardSubtitle>\r\n        <Chart options={options} series={graficas.map((item)=> <div>{item.ganancias}</div>)} type=\"bar\" height=\"390\" />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n"]},"metadata":{},"sourceType":"module"}