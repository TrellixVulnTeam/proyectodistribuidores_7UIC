{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sergi\\\\Desktop\\\\Proyecto Alysmar\\\\main\\\\src\\\\Login.js\";\nimport React from 'react';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggingIn: false\n    };\n  }\n\n  componentWillMount() {}\n\n  submit(event) {\n    event.preventDefault();\n    const username = this.refs.username.value;\n    const password = this.refs.password.value;\n\n    if (username.length === 0 || password.length === 0) {\n      return this.setState({\n        errorCode: 'missingUsernameOrPassword'\n      });\n    }\n\n    this.setState({\n      loggingIn: true,\n      errorCode: null\n    });\n    this.props.onLogin(username, password, err => {\n      if (err) {\n        return this.setState({\n          error: err,\n          loggingIn: false\n        });\n      }\n\n      if (this.props.location.state && this.props.location.state.nextPathname) {\n        window.location.href = this.props.location.state.nextPathname;\n      } else {\n        window.location.href = '/';\n      } // if (this.props.history) {\n      //   // Redirect to whatever URL the user was originally trying to access\n      //   if (this.props.location.state && this.props.location.state.nextPathname) {\n      //     this.props.history.push(this.props.location.state.nextPathname);\n      //   } else {\n      //     this.props.history.push('/');\n      //   }\n      // }\n\n    });\n  }\n\n  renderLoginError() {\n    if (!this.state.error) return null;\n    let message = null;\n\n    switch (this.state.error.code) {\n      case 'invalidCredentials':\n        message = 'Invalid credentials';\n        break;\n\n      case 'missingUsernameOrPassword':\n        message = 'Please enter your username and password';\n        break;\n\n      default:\n        message = 'Unknown sign-in error';\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"danger\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    const signInIconClass = this.state.loggingIn ? this.props.spinnerIconClass : this.props.buttonIconClass;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), this.renderLoginError(), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submit.bind(this),\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            autoCapitalize: false,\n            ref: \"username\",\n            placeholder: \"Username\",\n            autoFocus: true,\n            disabled: this.loggingIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            ref: \"password\",\n            placeholder: \"Password\",\n            disabled: this.loggingIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            type: \"submit\",\n            disabled: this.state.loggingIn,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sign-In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: signInIconClass,\n              style: {\n                marginLeft: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nLoginForm.defaultProps = {\n  heading: React.PropTypes.string,\n  spinnerIconClass: 'fa fa-spinner fa-spin',\n  buttonIconClass: 'fa fa-sign-in'\n};\nLoginForm.propTypes = {\n  location: React.PropTypes.object,\n  header: React.PropTypes.string,\n  spinnerIconClass: React.PropTypes.string,\n  loginIconClass: React.PropTypes.string,\n  onLogin: React.PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/sergi/Desktop/Proyecto Alysmar/main/src/Login.js"],"names":["React","Alert","Login","Component","constructor","state","loggingIn","componentWillMount","submit","event","preventDefault","username","refs","value","password","length","setState","errorCode","props","onLogin","err","error","location","nextPathname","window","href","renderLoginError","message","code","render","signInIconClass","spinnerIconClass","buttonIconClass","heading","bind","marginLeft","LoginForm","defaultProps","PropTypes","string","propTypes","object","header","loginIconClass","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Alert from './Alert';\r\n\r\nexport default class Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loggingIn: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n  }\r\n\r\n  submit(event) {\r\n    event.preventDefault();\r\n\r\n    const username = this.refs.username.value;\r\n    const password = this.refs.password.value;\r\n\r\n    if (username.length === 0 || password.length === 0) {\r\n      return this.setState({\r\n        errorCode: 'missingUsernameOrPassword'\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      loggingIn: true,\r\n      errorCode: null\r\n    });\r\n\r\n    this.props.onLogin(username, password, (err) => {\r\n      if (err) {\r\n        return this.setState({\r\n          error: err,\r\n          loggingIn: false\r\n        });\r\n      }\r\n\r\n      if (this.props.location.state && this.props.location.state.nextPathname) {\r\n        window.location.href = this.props.location.state.nextPathname;\r\n      } else {\r\n        window.location.href = '/';\r\n      }\r\n\r\n      // if (this.props.history) {\r\n      //   // Redirect to whatever URL the user was originally trying to access\r\n      //   if (this.props.location.state && this.props.location.state.nextPathname) {\r\n      //     this.props.history.push(this.props.location.state.nextPathname);\r\n      //   } else {\r\n      //     this.props.history.push('/');\r\n      //   }\r\n      // }\r\n    });\r\n  }\r\n\r\n  renderLoginError() {\r\n    if (!this.state.error) return null;\r\n\r\n    let message = null;\r\n    switch (this.state.error.code) {\r\n    case 'invalidCredentials':\r\n      message = 'Invalid credentials';\r\n      break;\r\n    case 'missingUsernameOrPassword':\r\n      message = 'Please enter your username and password';\r\n      break;\r\n    default:\r\n      message = 'Unknown sign-in error';\r\n      break;\r\n    }\r\n\r\n    return <Alert type=\"danger\"><strong>{message}</strong></Alert>;\r\n  }\r\n\r\n  render() {\r\n    const signInIconClass = (this.state.loggingIn) ?\r\n      this.props.spinnerIconClass : this.props.buttonIconClass;\r\n\r\n    return (\r\n      <div className=\"login-form\">\r\n        <h2>{this.props.heading}</h2>\r\n        {this.renderLoginError()}\r\n        <form onSubmit={this.submit.bind(this)} noValidate>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"username\">Username</label>\r\n            <input className=\"form-control\" autoCapitalize={false}\r\n              ref=\"username\" placeholder=\"Username\" autoFocus disabled={this.loggingIn}/>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"password\">Password</label>\r\n            <input className=\"form-control\" type=\"password\"\r\n              ref=\"password\" placeholder=\"Password\" disabled={this.loggingIn}/>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" type=\"submit\"\r\n              disabled={this.state.loggingIn}>\r\n              <span>Sign-In</span>\r\n              <i className={signInIconClass} style={{marginLeft: 6}}/>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.defaultProps = {\r\n  heading: React.PropTypes.string,\r\n  spinnerIconClass: 'fa fa-spinner fa-spin',\r\n  buttonIconClass: 'fa fa-sign-in'\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  location: React.PropTypes.object,\r\n  header: React.PropTypes.string,\r\n  spinnerIconClass: React.PropTypes.string,\r\n  loginIconClass: React.PropTypes.string,\r\n  onLogin: React.PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}