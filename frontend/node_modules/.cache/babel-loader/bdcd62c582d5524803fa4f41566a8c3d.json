{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sergi\\\\Desktop\\\\Proyecto Alysmar\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useRoutes } from \"react-router-dom\";\nimport { useReducer, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./auth/authContext\";\nimport Themeroutes from \"./routes/Router\";\nimport { authReducer } from \"./auth/authReducer\";\nimport roles from \"./helpers/roles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rolusuario = [{\n  id: 1,\n  email: \"edson@gmail.com\",\n  role: \"Empleado\"\n}, {\n  id: 2,\n  email: \"alysmaralejandra@gmail.com\",\n  role: \"Empleador\"\n}];\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem(rolusuario.email)) || {\n    logged: false\n  };\n};\n\nconst App = () => {\n  _s();\n\n  const routing = useRoutes(Themeroutes);\n  const [email, dispatch] = useReducer(authReducer, {}, init);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    if (!email) {\n      return;\n    }\n\n    localStorage.setItem(rolusuario.email, JSON.stringify(email));\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      email,\n      dispatch,\n      user,\n      rolusuario\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: routing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"tsm+rruDdyYa/5mgjAGAyhDXjKo=\", false, function () {\n  return [useRoutes];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sergi/Desktop/Proyecto Alysmar/frontend/src/App.js"],"names":["useRoutes","useReducer","useEffect","useState","AuthContext","Themeroutes","authReducer","roles","rolusuario","id","email","role","init","JSON","parse","localStorage","getItem","logged","App","routing","dispatch","user","setUser","setItem","stringify"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAGA,MAAMC,UAAU,GAAE,CAChB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADgB,EAMhB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,4BAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANgB,CAAlB;;AAYA,MAAMC,IAAI,GAAE,MAAI;AACd,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,UAAU,CAACE,KAAhC,CAAX,KAAwD;AAACO,IAAAA,MAAM,EAAE;AAAT,GAA/D;AACD,CAFD;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGnB,SAAS,CAACK,WAAD,CAAzB;AACD,QAAM,CAACK,KAAD,EAAQU,QAAR,IAAmBnB,UAAU,CAACK,WAAD,EAAc,EAAd,EAAkBM,IAAlB,CAAnC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAgBnB,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG,CAACQ,KAAJ,EAAU;AACR;AACD;;AACDK,IAAAA,YAAY,CAACQ,OAAb,CAAqBf,UAAU,CAACE,KAAhC,EAAuCG,IAAI,CAACW,SAAL,CAAed,KAAf,CAAvC;AACD,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAMC,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EACzB;AACEA,MAAAA,KADF;AAECU,MAAAA,QAFD;AAGCC,MAAAA,IAHD;AAICb,MAAAA;AAJD,KADF;AAAA,2BAQG;AAAA,gBAAMW;AAAN;AAAA;AAAA;AAAA;AAAA;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxBD;;GAAMD,G;UACYlB,S;;;KADZkB,G;AA0BN,eAAeA,GAAf","sourcesContent":["import { useRoutes } from \"react-router-dom\";\nimport { useReducer, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./auth/authContext\";\nimport Themeroutes from \"./routes/Router\";\nimport { authReducer } from \"./auth/authReducer\";\nimport roles from \"./helpers/roles\";\n\n\nconst rolusuario =[\n  {\n    id: 1,\n    email: \"edson@gmail.com\",\n    role: \"Empleado\"\n  },\n  {\n    id: 2,\n    email: \"alysmaralejandra@gmail.com\",\n    role: \"Empleador\"\n  }\n]\nconst init =()=>{\n  return JSON.parse(localStorage.getItem(rolusuario.email, )) || {logged: false};\n}\nconst App = () => {\n  const routing = useRoutes(Themeroutes);\n const [email, dispatch]= useReducer(authReducer, {}, init);\n const [user, setUser]=useState({})\n\n useEffect(()=>{\n   if(!email){\n     return;\n   }\n   localStorage.setItem(rolusuario.email, JSON.stringify(email))\n }, [email])\n  return (\n    <AuthContext.Provider value={\n      {\n        email,\n       dispatch,\n       user,\n       rolusuario\n      }\n    }>\n       <div>{routing}</div>\n    </AuthContext.Provider>\n  \n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}